{"ast":null,"code":"import _asyncToGenerator from \"/home/vitologiko15/App Bank Frontend/Bank-App-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Cliente } from '../cliente';\nimport { firstValueFrom } from 'rxjs';\nlet ActualizarClienteComponent = class ActualizarClienteComponent {\n  constructor(clienteServicio, router, route) {\n    this.clienteServicio = clienteServicio;\n    this.router = router;\n    this.route = route;\n    this.cliente = new Cliente();\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.clienteServicio.obtenerClientePorId(this.id).subscribe(dato => {\n      this.cliente = dato;\n    }, error => console.log(error));\n  }\n  guardarCliente() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const dato = yield firstValueFrom(_this.clienteServicio.registrarCliente(_this.cliente));\n        console.log(dato);\n        _this.irALaListaDeClientes();\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }\n  irALaListaDeClientes() {\n    this.router.navigate(['/clientes']);\n  }\n  onSubmit() {\n    this.clienteServicio.actualizarCliente(this.id, this.cliente).subscribe(dato => {\n      this.irALaListaDeClientes();\n    }, error => console.log(error));\n  }\n};\nActualizarClienteComponent = __decorate([Component({\n  selector: 'app-actualizar-cliente',\n  templateUrl: './actualizar-cliente.component.html',\n  styleUrls: ['./actualizar-cliente.component.css']\n})], ActualizarClienteComponent);\nexport { ActualizarClienteComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,OAAO,QAAQ,YAAY;AAIpC,SAASC,cAAc,QAAQ,MAAM;AAO9B,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAKrCC,YAAqBC,eAA8B,EAAUC,MAAa,EAAUC,KAAoB;IAAnF,oBAAe,GAAfF,eAAe;IAAyB,WAAM,GAANC,MAAM;IAAiB,UAAK,GAALC,KAAK;IAFzF,YAAO,GAAa,IAAIN,OAAO,EAAE;EAE0E;EAE3GO,QAAQ;IACN,IAAI,CAACC,EAAE,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACN,eAAe,CAACO,mBAAmB,CAAC,IAAI,CAACH,EAAE,CAAC,CAACI,SAAS,CAACC,IAAI,IAAG;MACjE,IAAI,CAACC,OAAO,GAAGD,IAAI;IACrB,CAAC,EAACE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAChC;EAEMG,cAAc;IAAA;IAAA;MAClB,IAAI;QACF,MAAML,IAAI,SAASZ,cAAc,CAAC,KAAI,CAACG,eAAe,CAACe,gBAAgB,CAAC,KAAI,CAACL,OAAO,CAAC,CAAC;QACtFE,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;QACjB,KAAI,CAACO,oBAAoB,EAAE;OAC5B,CAAC,OAAOL,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;;IACnB;EACH;EAEAK,oBAAoB;IAClB,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;EAEAC,QAAQ;IACN,IAAI,CAAClB,eAAe,CAACmB,iBAAiB,CAAC,IAAI,CAACf,EAAE,EAAC,IAAI,CAACM,OAAO,CAAC,CAACF,SAAS,CAACC,IAAI,IAAG;MAC5E,IAAI,CAACO,oBAAoB,EAAE;IAC7B,CAAC,EAACL,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAChC;CACD;AAjCYb,0BAA0B,eALtCH,SAAS,CAAC;EACTyB,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,GACWxB,0BAA0B,CAiCtC;SAjCYA,0BAA0B","names":["Component","Cliente","firstValueFrom","ActualizarClienteComponent","constructor","clienteServicio","router","route","ngOnInit","id","snapshot","params","obtenerClientePorId","subscribe","dato","cliente","error","console","log","guardarCliente","registrarCliente","irALaListaDeClientes","navigate","onSubmit","actualizarCliente","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/vitologiko15/App Bank Frontend/Bank-App-frontend/src/app/actualizar-cliente/actualizar-cliente.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Cliente } from '../cliente';\nimport { ClienteService } from '../cliente.service';\nimport { ActivatedRoute, Route, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\n\n@Component({\n  selector: 'app-actualizar-cliente',\n  templateUrl: './actualizar-cliente.component.html',\n  styleUrls: ['./actualizar-cliente.component.css']\n})\nexport class ActualizarClienteComponent implements OnInit{\n  \n  id:number\n  cliente : Cliente = new Cliente();\n  \n  constructor (private clienteServicio:ClienteService, private router:Router, private route:ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n    this.clienteServicio.obtenerClientePorId(this.id).subscribe(dato => {\n      this.cliente = dato;\n    },error => console.log(error));\n  }\n\n  async guardarCliente() {\n    try {\n      const dato = await firstValueFrom(this.clienteServicio.registrarCliente(this.cliente));\n      console.log(dato);\n      this.irALaListaDeClientes();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  irALaListaDeClientes(){\n    this.router.navigate(['/clientes']);\n  }\n\n  onSubmit() {\n    this.clienteServicio.actualizarCliente(this.id,this.cliente).subscribe(dato => {\n      this.irALaListaDeClientes();\n    },error => console.log(error));\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}