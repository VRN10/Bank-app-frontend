{"ast":null,"code":"import { Mensaje } from '../mensaje';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../mensaje.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ActualizarMensajeComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Indique el id del gestor que envia el mensaje \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActualizarMensajeComponent_div_12_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Consulte la lista de gestores para saber los id \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActualizarMensajeComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, ActualizarMensajeComponent_div_12_div_1_Template, 2, 0, \"div\", 14);\n    i0.ɵɵtemplate(2, ActualizarMensajeComponent_div_12_div_2_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors);\n  }\n}\nfunction ActualizarMensajeComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Indique el id del gestor que recibe el mensaje \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActualizarMensajeComponent_div_19_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Consulte la lista de gestores para saber los id \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActualizarMensajeComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, ActualizarMensajeComponent_div_19_div_1_Template, 2, 0, \"div\", 14);\n    i0.ɵɵtemplate(2, ActualizarMensajeComponent_div_19_div_2_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(18);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors);\n  }\n}\nfunction ActualizarMensajeComponent_div_26_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Escriba el mensaje con un m\\u00EDnimo de 4 c\\u00E1racteres hasta un m\\u00E1ximo de 300 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActualizarMensajeComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, ActualizarMensajeComponent_div_26_div_1_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(25);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors);\n  }\n}\nexport class ActualizarMensajeComponent {\n  constructor(mensajeServicio, router, route) {\n    this.mensajeServicio = mensajeServicio;\n    this.router = router;\n    this.route = route;\n    this.mensaje = new Mensaje();\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.mensajeServicio.obtenerMensajePorId(this.id).subscribe(dato => {\n      this.mensaje = dato;\n    }, error => console.log(error));\n  }\n  irALaListaDeMensajes() {\n    this.router.navigate['/mensajes'];\n  }\n  onSubmit() {\n    this.irALaListaDeMensajes();\n    this.mensajeServicio.actualizarMensaje(this.id, this.mensaje).subscribe(dato => {\n      this.irALaListaDeMensajes();\n    });\n  }\n}\nActualizarMensajeComponent.ɵfac = function ActualizarMensajeComponent_Factory(t) {\n  return new (t || ActualizarMensajeComponent)(i0.ɵɵdirectiveInject(i1.MensajeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nActualizarMensajeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ActualizarMensajeComponent,\n  selectors: [[\"app-actualizar-mensaje\"]],\n  decls: 30,\n  vars: 6,\n  consts: [[1, \"col-md-6\", \"offset-md-3\"], [1, \"text-center\"], [3, \"ngSubmit\"], [\"mensajeForm\", \"ngForm\"], [1, \"form-group\"], [\"type\", \"number\", \"id\", \"mensaje\", \"name\", \"id_origen\", \"required\", \"\", \"placeholder\", \"Indique el id del gestor que desea enviar el mensaje\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id_origen\", \"ngModel\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"number\", \"id\", \"mensaje\", \"name\", \"id_destino\", \"required\", \"\", \"placeholder\", \"Indique el id de destino del gestor que lo recibir\\u00E1\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id_destino\", \"ngModel\"], [\"type\", \"text\", \"id\", \"mensaje\", \"name\", \"usuario\", \"required\", \"\", \"minlength\", \"4\", \"maxlength\", \"300\", \"placeholder\", \"Escriba el mensaje\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"texto\", \"ngModel\"], [1, \"btn\", \"btn-success\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n  template: function ActualizarMensajeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"br\");\n      i0.ɵɵelementStart(2, \"h3\", 1);\n      i0.ɵɵtext(3, \"Enviar Mensaje\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵelementStart(5, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function ActualizarMensajeComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\");\n      i0.ɵɵtext(9, \"Id de Origen: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 5, 6);\n      i0.ɵɵlistener(\"ngModelChange\", function ActualizarMensajeComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.mensaje.id_origen = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, ActualizarMensajeComponent_div_12_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"br\");\n      i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\");\n      i0.ɵɵtext(16, \"Id de Destino: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function ActualizarMensajeComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.mensaje.id_destino = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, ActualizarMensajeComponent_div_19_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵelementStart(21, \"div\", 4)(22, \"label\");\n      i0.ɵɵtext(23, \"Texto del Mensaje: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function ActualizarMensajeComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.mensaje.texto = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(26, ActualizarMensajeComponent_div_26_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"br\");\n      i0.ɵɵelementStart(28, \"button\", 12);\n      i0.ɵɵtext(29, \"Enviar\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(11);\n      const _r3 = i0.ɵɵreference(18);\n      const _r5 = i0.ɵɵreference(25);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.mensaje.id_origen);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.dirty || _r1.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.mensaje.id_destino);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && (_r3.dirty || _r3.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.mensaje.texto);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r5.invalid && (_r5.dirty || _r5.touched));\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.MaxLengthValidator, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Mensaje","i0","ActualizarMensajeComponent","constructor","mensajeServicio","router","route","ngOnInit","id","snapshot","params","obtenerMensajePorId","subscribe","dato","mensaje","error","console","log","irALaListaDeMensajes","navigate","onSubmit","actualizarMensaje","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/vitologiko15/App Bank Frontend/Bank-App-frontend/src/app/actualizar-mensaje/actualizar-mensaje.component.ts","/home/vitologiko15/App Bank Frontend/Bank-App-frontend/src/app/actualizar-mensaje/actualizar-mensaje.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Mensaje } from '../mensaje';\nimport { MensajeService } from '../mensaje.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-actualizar-mensaje',\n  templateUrl: './actualizar-mensaje.component.html',\n  styleUrls: ['./actualizar-mensaje.component.css']\n})\nexport class ActualizarMensajeComponent implements OnInit {\n  \n  id:number;\n  mensaje:Mensaje = new Mensaje();\n  \n  constructor(private mensajeServicio:MensajeService, private router:Router, private route:ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n    this.mensajeServicio.obtenerMensajePorId(this.id).subscribe(dato => {\n      this.mensaje = dato;\n    }, error => console.log(error));\n  }\n\n  irALaListaDeMensajes() {\n    this.router.navigate[('/mensajes')];\n  }\n\n  onSubmit() {\n    this.irALaListaDeMensajes();\n    this.mensajeServicio.actualizarMensaje(this.id, this.mensaje).subscribe(dato => {\n      this.irALaListaDeMensajes()\n    })\n  }\n\n}\n","<div class=\"col-md-6 offset-md-3\">\n    <br>\n    <h3 class=\"text-center\">Enviar Mensaje</h3>\n    <br>\n    <form (ngSubmit)=\"onSubmit()\" #mensajeForm=\"ngForm\">\n        <div class=\"form-group\">\n            <label>Id de Origen: </label>\n            <input type=\"number\" class=\"form-control\" id=\"mensaje\" [(ngModel)]=\"mensaje.id_origen\" name=\"id_origen\" required\n             placeholder=\"Indique el id del gestor que desea enviar el mensaje\" #id_origen=\"ngModel\">\n            <div class=\"alert alert-danger\" *ngIf=\"id_origen.invalid && (id_origen.dirty || id_origen.touched)\">\n                <div *ngIf=\"id_origen.errors\">\n                    Indique el id del gestor que envia el mensaje\n                </div>\n                <div *ngIf=\"id_origen.errors\">\n                    Consulte la lista de gestores para saber los id\n                </div>\n            </div>\n        </div>\n        <br>\n        <div class=\"form-group\">\n            <label>Id de Destino: </label>\n            <input type=\"number\" class=\"form-control\" id=\"mensaje\" [(ngModel)]=\"mensaje.id_destino\" name=\"id_destino\" required\n             placeholder=\"Indique el id de destino del gestor que lo recibirá\" #id_destino=\"ngModel\">\n            <div class=\"alert alert-danger\" *ngIf=\"id_destino.invalid && (id_destino.dirty || id_destino.touched)\">\n                <div *ngIf=\"id_destino.errors\">\n                    Indique el id del gestor que recibe el mensaje\n                </div>\n                <div *ngIf=\"id_destino.errors\">\n                    Consulte la lista de gestores para saber los id\n                </div>\n            </div>\n        </div>\n        <br>\n        <div class=\"form-group\">\n            <label>Texto del Mensaje: </label>\n            <input type=\"text\" class=\"form-control\" id=\"mensaje\" [(ngModel)]=\"mensaje.texto\" name=\"usuario\" required\n                minlength=\"4\" maxlength=\"300\" placeholder=\"Escriba el mensaje\" #texto=\"ngModel\">\n            <div class=\"alert alert-danger\" *ngIf=\"texto.invalid && (texto.dirty || texto.touched)\">\n                <div *ngIf=\"texto.errors\">\n                    Escriba el mensaje con un mínimo de 4 cáracteres hasta un máximo de 300\n                </div>\n            </div>\n        </div>\n        <br>\n        <button class=\"btn btn-success\">Enviar</button>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}