{"ast":null,"code":"import swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../gestor.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ListaGestoresComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ListaGestoresComponent_tr_14_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const gestor_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.actualizarGestor(gestor_r1.id));\n    });\n    i0.ɵɵtext(9, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ListaGestoresComponent_tr_14_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const gestor_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.eliminarGestor(gestor_r1.id));\n    });\n    i0.ɵɵtext(11, \"Eliminar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ListaGestoresComponent_tr_14_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const gestor_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.verDetallesDelGestor(gestor_r1.id));\n    });\n    i0.ɵɵtext(13, \"Detalles\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const gestor_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(gestor_r1.usuario);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(gestor_r1.password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(gestor_r1.correo);\n  }\n}\nexport class ListaGestoresComponent {\n  constructor(gestorServicio, router) {\n    this.gestorServicio = gestorServicio;\n    this.router = router;\n    this.gestorServicio = gestorServicio;\n    this.router = router;\n    this.gestores = [];\n  }\n  ngOnInit() {\n    this.obtenerGestores();\n  }\n  actualizarGestor(id) {\n    return this.router.navigate(['actualizar-gestor', id]);\n  }\n  obtenerGestores() {\n    this.gestorServicio.obtenerListaDeGestores().subscribe(dato => {\n      this.gestores = dato;\n    });\n  }\n  eliminarGestor(id) {\n    swal({\n      title: '¿Estas seguro?',\n      text: \"Confirma si deseas eliminar al gestor\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si , elimínalo',\n      cancelButtonText: 'No, cancelar',\n      confirmButtonClass: 'btn btn-success',\n      cancelButtonClass: 'btn btn-danger',\n      buttonsStyling: true\n    });\n  }\n  verDetallesDelGestor(id) {\n    this.router.navigate(['gestor-detalles', id]);\n  }\n}\nListaGestoresComponent.ɵfac = function ListaGestoresComponent_Factory(t) {\n  return new (t || ListaGestoresComponent)(i0.ɵɵdirectiveInject(i1.GestorService), i0.ɵɵdirectiveInject(i2.Router));\n};\nListaGestoresComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListaGestoresComponent,\n  selectors: [[\"app-lista-gestores\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[1, \"table\", \"table-striped\"], [1, \"table\", \"table-dark\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 2, \"margin-left\", \"7.5px\", 3, \"click\"], [1, \"btn\", \"btn-primary\", 2, \"margin-left\", \"7.5px\", 3, \"click\"]],\n  template: function ListaGestoresComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Lista de Gestores\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\", 1)(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"Usuario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Correo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Acciones\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tbody\");\n      i0.ɵɵtemplate(14, ListaGestoresComponent_tr_14_Template, 14, 3, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.gestores);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAIA,OAAOA,IAAI,MAAM,aAAa;;;;;;;;ICOtBC,0BAAoC;IAC5BA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IACQA;MAAA;MAAA;MAAA;MAAA,OAASA,oDAA2B;IAAA,EAAC;IAAsBA,sBAAM;IAAAA,iBAAS;IAClFA,kCAA8F;IAAtFA;MAAA;MAAA;MAAA;MAAA,OAASA,kDAAyB;IAAA,EAAC;IAAmDA,yBAAQ;IAAAA,iBAAS;IAC/GA,kCAAqG;IAA7FA;MAAA;MAAA;MAAA;MAAA,OAASA,wDAA+B;IAAA,EAAC;IAAoDA,yBAAQ;IAAAA,iBAAS;;;;IANtHA,eAAkB;IAAlBA,uCAAkB;IAClBA,eAAmB;IAAnBA,wCAAmB;IACnBA,eAAiB;IAAjBA,sCAAiB;;;ADHjC,OAAM,MAAOC,sBAAsB;EAKjCC,YAAqBC,cAA4B,EAAUC,MAAa;IAAnD,mBAAc,GAAdD,cAAc;IAAwB,WAAM,GAANC,MAAM;IAC/D,IAAI,CAACD,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,QAAQ,GAAG,EAAE;EACpB;EAEAC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAC,gBAAgB,CAACC,EAAS;IACxB,OAAO,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,mBAAmB,EAAED,EAAE,CAAC,CAAC;EACxD;EAEQF,eAAe;IACrB,IAAI,CAACJ,cAAc,CAACQ,sBAAsB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC5D,IAAI,CAACR,QAAQ,GAAGQ,IAAI;IACtB,CAAC,CAAC;EACJ;EAEAC,cAAc,CAACL,EAAS;IACtBV,IAAI,CAAC;MACHgB,KAAK,EAAE,gBAAgB;MACvBC,IAAI,EAAE,uCAAuC;MAC7CC,IAAI,EAAE,SAAS;MACfC,gBAAgB,EAAE,IAAI;MACtBC,kBAAkB,EAAE,SAAS;MAC7BC,iBAAiB,EAAE,MAAM;MACzBC,iBAAiB,EAAE,gBAAgB;MACnCC,gBAAgB,EAAE,cAAc;MAChCC,kBAAkB,EAAE,iBAAiB;MACrCC,iBAAiB,EAAE,gBAAgB;MACnCC,cAAc,EAAE;KACnB,CAAC;EACF;EAEAC,oBAAoB,CAACjB,EAAS;IAC5B,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,iBAAiB,EAAED,EAAE,CAAC,CAAC;EAC/C;;AA3CWR,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXnC/B,0BAAI;MAAAA,iCAAiB;MAAAA,iBAAK;MAC1BA,gCAAmC;MAGnBA,uBAAO;MAAAA,iBAAK;MAChBA,0BAAI;MAAAA,wBAAQ;MAAAA,iBAAK;MACjBA,0BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MACfA,2BAAI;MAAAA,yBAAQ;MAAAA,iBAAK;MAGzBA,8BAAO;MACHA,wEASK;MACTA,iBAAQ;;;MAVmBA,gBAAW;MAAXA,sCAAW","names":["swal","i0","ListaGestoresComponent","constructor","gestorServicio","router","gestores","ngOnInit","obtenerGestores","actualizarGestor","id","navigate","obtenerListaDeGestores","subscribe","dato","eliminarGestor","title","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","confirmButtonClass","cancelButtonClass","buttonsStyling","verDetallesDelGestor","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/vitologiko15/App Bank Frontend/Bank-App-frontend/src/app/lista-gestores/lista-gestores.component.ts","/home/vitologiko15/App Bank Frontend/Bank-App-frontend/src/app/lista-gestores/lista-gestores.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Gestor } from '../gestor';\nimport { GestorService } from '../gestor.service';\nimport { Router } from '@angular/router';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-lista-gestores',\n  templateUrl: './lista-gestores.component.html',\n  styleUrls: ['./lista-gestores.component.css']\n})\nexport class ListaGestoresComponent implements OnInit {\n\n  gestores:Gestor[];\n  \n\n  constructor (private gestorServicio:GestorService, private router:Router) {\n    this.gestorServicio = gestorServicio;\n    this.router = router;\n    this.gestores = [];\n  }\n\n  ngOnInit():void {\n    this.obtenerGestores();\n  }\n\n  actualizarGestor(id:number) {\n    return this.router.navigate(['actualizar-gestor', id]);\n  }\n\n  private obtenerGestores() {\n    this.gestorServicio.obtenerListaDeGestores().subscribe(dato => {\n      this.gestores = dato;\n    });\n  }\n\n  eliminarGestor(id:number) {\n    swal({\n      title: '¿Estas seguro?',\n      text: \"Confirma si deseas eliminar al gestor\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si , elimínalo',\n      cancelButtonText: 'No, cancelar',\n      confirmButtonClass: 'btn btn-success',\n      cancelButtonClass: 'btn btn-danger',\n      buttonsStyling: true\n  })\n  }\n\n  verDetallesDelGestor(id:number) {\n    this.router.navigate(['gestor-detalles', id]);\n  }\n}\n\n","<h2>Lista de Gestores</h2>\n<table class=\"table table-striped\">\n    <thead class=\"table table-dark\">\n        <tr>\n            <th>Usuario</th>\n            <th>Password</th>\n            <th>Correo</th>\n            <th>Acciones</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let gestor of gestores\">\n            <td>{{gestor.usuario}}</td>\n            <td>{{gestor.password}}</td>\n            <td>{{gestor.correo}}</td>\n            <td>\n                <button (click)=\"actualizarGestor(gestor.id)\" class=\"btn btn-info\">Editar</button>\n                <button (click)=\"eliminarGestor(gestor.id)\" class=\"btn btn-danger\" style=\"margin-left: 7.5px\">Eliminar</button>\n                <button (click)=\"verDetallesDelGestor(gestor.id)\" class=\"btn btn-primary\" style=\"margin-left: 7.5px\">Detalles</button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}