{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClienteService {\n  constructor(htppClient) {\n    this.htppClient = htppClient;\n    this.baseUrl = \"http://localhost:8080/bankapp/v1/clientes\";\n  }\n  obtenerListaDeClientes() {\n    return this.htppClient.get(`${this.baseUrl}`);\n  }\n  registrarCliente(cliente) {\n    return this.htppClient.post(`${this.baseUrl}`, cliente);\n  }\n  obtenerGestor() {\n    return this.httpClient.get('http://localhost:8080/api/gestores/1');\n    // el id del gestor puede variar, en este caso se asume que es 1\n  }\n}\n\nClienteService.ɵfac = function ClienteService_Factory(t) {\n  return new (t || ClienteService)(i0.ɵɵinject(i1.HttpClient));\n};\nClienteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClienteService,\n  factory: ClienteService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,cAAc;EAMzBC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAFtB,YAAO,GAAG,2CAA2C;EAEhB;EAE7CC,sBAAsB;IACpB,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAY,GAAG,IAAI,CAACC,OAAO,EAAE,CAAC;EAC1D;EAEAC,gBAAgB,CAACC,OAAe;IAC9B,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAY,GAAG,IAAI,CAACH,OAAO,EAAE,EAAEE,OAAO,CAAC;EACpE;EAEAE,aAAa;IACX,OAAO,IAAI,CAACC,UAAU,CAACN,GAAG,CAAS,sCAAsC,CAAC;IAC1E;EACF;;;AAnBWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAW,SAAdX,cAAc;EAAAY,YAFb;AAAM","names":["ClienteService","constructor","htppClient","obtenerListaDeClientes","get","baseUrl","registrarCliente","cliente","post","obtenerGestor","httpClient","factory","providedIn"],"sourceRoot":"","sources":["/home/vitologiko15/App Bank Frontend/Bank-App-frontend/src/app/cliente.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Cliente } from './cliente';\nimport { Gestor } from './gestor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  private htppClient:HttpClient\n  \n  private baseUrl = \"http://localhost:8080/bankapp/v1/clientes\";\n\n  constructor(private htppClient:HttpClient) { }\n\n  obtenerListaDeClientes():Observable<Cliente[]> {\n    return this.htppClient.get<Cliente[]>(`${this.baseUrl}`);\n  }\n\n  registrarCliente(cliente:Cliente) : Observable<Object> {\n    return this.htppClient.post<Cliente[]>(`${this.baseUrl}`, cliente);\n  }\n\n  obtenerGestor(): Observable<Gestor> {\n    return this.httpClient.get<Gestor>('http://localhost:8080/api/gestores/1');\n    // el id del gestor puede variar, en este caso se asume que es 1\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}